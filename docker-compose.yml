version: '3'

services:
    database:
        container_name: ${DATABASE_CONTAINER_NAME}
        image: 'postgres'
        environment:
            POSTGRES_USER: ${DATABASE_USERNAME}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
            POSTGRES_DB: ${DATABASE_NAME}
            PGDATA: /var/lib/postgresql/data/pgdata
        volumes:
            - postgres:/var/lib/postgresql/data
            - pg_socket:/var/run/postgresql
        ports:
            - '5432:5432'
        networks:
            - pac
        restart: unless-stopped

    rabbitmq:
        container_name: ${RABBITMQ_CONTAINER_NAME}
        build:
            context: ./docker/rabbitmq
        hostname: 'rabbitmq1'
        volumes:
            - ./docker/rabbitmq/rabbitmq.conf:/rabbitmq.conf
        environment:
            RABBITMQ_DEFAULT_USER: 'rabbitmq'
            RABBITMQ_DEFAULT_PASS: 'rabbitmq'
        ports:
            - '15672:15672'
            - '5672:5672'
        networks:
            - pac
        restart: unless-stopped

    asterisk:
        container_name: ${ASTERISK_CONTAINER_NAME}
        build:
            context: ./docker/asterisk
        env_file:
            - .env
        volumes:
            - /etc/asterisk/:/etc/asterisk:rw
            - pg_socket:/var/run/postgresql
            - /var/lib/asterisk/sounds/ru/:/var/lib/asterisk/sounds/ru:rw
        ports:
            - '6066:6066/tcp'
            - '6066:6066/udp'
            - '5060:5060/udp'
            - '5038:5038'
            - '8088:8088'
            - '20000-20500:20000-20500/udp'
        networks:
            - pac
        restart: unless-stopped

    redis:
        container_name: ${REDIS_CONTAINER_NAME}
        build:
            context: ./docker/redis
        env_file:
            - .env
        ports:
            - '6379:6379'
        volumes:
            - /usr/local/redisdata:/data
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 512M
                reservations:
                    cpus: '0.25'
                    memory: 256M
        healthcheck:
            test: ['CMD', 'redis-cli', '-a', '$REDIS_PASSWORD', 'ping']
            interval: 30s
            timeout: 10s
            retries: 5
        restart: unless-stopped
        networks:
            - pac
networks:
    pac:
        driver: bridge

volumes:
    postgres:
    pg_socket:
